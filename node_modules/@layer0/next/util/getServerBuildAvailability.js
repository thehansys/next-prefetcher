"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const major_1 = __importDefault(require("semver/functions/major"));
const resolve_package_path_1 = __importDefault(require("resolve-package-path"));
function getNextMajorVersion() {
    // This will return the path to the main module, which will not necessarily be in the root
    // directory of the package. Next.js is one such example.
    const packagePath = resolve_package_path_1.default('next', process.cwd());
    return packagePath ? major_1.default(eval('require')(packagePath).version) : null;
}
let memoized;
exports.getServerBuildAvailability = ({ config }) => {
    if (memoized)
        return memoized;
    const nextMajorVersion = getNextMajorVersion();
    const serverBuildAvailable = Boolean(nextMajorVersion && nextMajorVersion >= 12);
    const useServerBuild = serverBuildAvailable && config.target === 'server';
    if (serverBuildAvailable && !useServerBuild) {
        console.warn('`@layer0/next` will utilize the `server` target by default in future versions.');
        console.warn('Opt in early by setting `target: server` in your `next.config.js` file.');
        console.warn('More information: https://docs.layer0.co/guides/next#section_next_js_version_12_and_next_js_middleware__beta_');
    }
    memoized = { serverBuildAvailable, useServerBuild };
    return { serverBuildAvailable, useServerBuild };
};
