"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("@layer0/core/constants");
/**
 * Workbox only allows GET requests to be cached out-of-the-box, so this plugin
 * allows for changing the method of a request so that it can be cached.
 */
class ChangeMethodPlugin {
    constructor(urls) {
        this.urls = urls;
    }
    urlMatches(url) {
        return this.urls.some(testUrl => testUrl.test(url));
    }
    /**
     * Workbox requires cache keys to be GET method, so this forces the method when it is determined
     * that the cache key will be used.
     * If the request has a body, the body will be added to the URL for the cache key
     * using the POST_BODY_QUERY_PARAM.
     */
    async cacheKeyWillBeUsed({ request }) {
        const url = new URL(request.url);
        if (this.urlMatches(url.pathname)) {
            let body = await request.clone().text();
            const bodyParam = url.searchParams.get(constants_1.POST_BODY_QUERY_PARAM);
            if (!bodyParam && body) {
                url.searchParams.set(constants_1.POST_BODY_QUERY_PARAM, encodeURIComponent(body));
            }
        }
        return url.toString();
    }
    /**
     *
     */
    async requestWillFetch({ request }) {
        const url = new URL(request.url);
        if (this.urlMatches(url.pathname) && request.method.toUpperCase() !== 'GET') {
            // if the request is not a GET, then it's ok to modify the request and bump
            // the priority since this means it is the real (non-prefetch) request (a
            // prefetch request will not come in as anything but a GET)
            const headers = new Headers(request.headers);
            let body = await request.clone().text();
            url.searchParams.set(constants_1.POST_BODY_QUERY_PARAM, body);
            return new Request(url.toString(), {
                method: 'get',
                headers,
                redirect: request.redirect,
            });
        }
        return request;
    }
}
exports.default = ChangeMethodPlugin;
