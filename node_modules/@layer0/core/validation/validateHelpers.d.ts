import { JwtAlgo } from '../types';
/**
 * List of all enumeration values for JwtAlgo type
 * we need this to check at runtime whether user passed only
 * allowed values
 */
export declare const JWT_ALGO_NAMES: {
    name: string;
    value: JwtAlgo;
}[];
/**
 * Checks whether the given string is one of the possible
 * values defined by JwtAlgo enum type
 * @param value value to check
 * @returns true if value is one of the JwtAlgo, otherwise false
 */
export declare const isJwtAlgo: (value: string) => boolean;
/**
 * Validate that given value is not one of the prohibited header names
 * @param name
 */
export declare const isProhibitedHeaderName: (name: string) => boolean;
/**
 * Validate that prohibited cookie names are not overrideable by the user
 * @param name
 */
export declare const isProhibitedCookieName: (name: string) => boolean;
/**
 * @param name header name in format of RFC 7230 specification
 * @returns true if given name is valid header name, otherwise false
 */
export declare const isValidHeaderName: (name: string) => boolean;
/**
 * @param value header value in format of RFC 7230 specification
 * @returns true if given value is valid header value, otherwise false
 */
export declare const isValidHeaderValue: (value: string) => boolean;
